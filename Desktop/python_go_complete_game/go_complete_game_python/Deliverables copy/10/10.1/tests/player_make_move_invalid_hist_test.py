import pytest
from board_components.board import Board
from board_components.go_players import GoPlayer
from board_components.go_factories import GoPlayerFactory

playerFactory = GoPlayerFactory()
player = GoPlayer()
player = playerFactory.enforce_constraints(player, constraint='all')
player.register()

def test_invalid_hist_one():
  player.end_game()
  player.receive_stones("B")

  with pytest.raises(AssertionError):
    hist = [
      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],

      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],
    ]
    player.make_a_move(hist)

  with pytest.raises(AssertionError):
    hist = [
      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", "W", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],

      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],
    ]
    player.make_a_move(hist)

def test_invalid_hist_two():
  player.end_game()
  player.receive_stones("B")

  with pytest.raises(AssertionError):
    hist = [
      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],

      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],

      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],
    ]
    player.make_a_move(hist)

  with pytest.raises(AssertionError):
    hist = [
      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", "B", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],

      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],
    ]
    player.make_a_move(hist)

def test_invalid_hist_three():
  player.end_game()
  player.receive_stones("B")

  with pytest.raises(AssertionError):
    hist = [
      [["B", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", "W", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],

      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", "B", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],
    ]
    player.make_a_move(hist)

  with pytest.raises(AssertionError):
    hist = [
      [[" "," ","B"," ","B","W"," "," "," "],
       [" ","B"," ","B","W"," "," "," "," "],
       [" ","B"," ","B","W"," "," "," "," "],
       [" ","B","B","W","W"," "," "," "," "],
       [" "," ","B","B","W"," "," "," "," "],
       [" "," ","B","W","W"," "," "," "," "],
       [" "," ","B","B","W"," "," "," "," "],
       [" "," ","B","W"," "," "," "," "," "],
       [" "," ","B","W","W"," "," "," "," "]],

      [[" "," ","B"," ","B","W"," "," "," "],
       [" ","B"," ","B","W"," "," "," "," "],
       [" ","B"," ","B","W"," "," "," "," "],
       [" ","B","B","W","W"," "," "," "," "],
       [" "," ","B","B","W"," "," "," "," "],
       [" "," ","B","W","W"," "," "," "," "],
       [" "," ","B","B","W"," "," "," "," "],
       [" "," ","B","W"," "," "," "," "," "],
       [" "," ","B","W","W"," "," "," "," "]],

      [[" "," ","B"," ","B","W"," "," "," "],
       [" ","B"," ","B","W"," "," "," "," "],
       [" ","B"," ","B","W"," "," "," "," "],
       [" ","B","B","W","W"," "," "," "," "],
       [" "," ","B","B","W"," "," "," "," "],
       [" "," ","B","W","W"," "," "," "," "],
       [" "," ","B","B","W"," "," "," "," "],
       [" "," ","B","W"," "," "," "," "," "],
       [" "," ","B","W","W"," "," "," "," "]],
    ]
    player.make_a_move(hist)

def test_invalid_hist_four():
  player.end_game()
  player.receive_stones("B")

  with pytest.raises(AssertionError):
    hist = [
      [["W","B","B"," ","B","W"," "," "," "],
       ["W","B","B","W","W"," "," "," "," "],
       ["W","B"," ","B","W"," "," "," "," "],
       ["W","W","B","W","W"," "," "," "," "],
       ["W","W","B","B","W"," "," "," "," "],
       ["W","W","B","W","W"," "," "," "," "],
       ["W","W","B","B","W"," "," "," "," "],
       ["W","W","B","W"," "," "," "," "," "],
       ["W","W","B","W","W"," "," "," "," "]],

      [["W","B","B"," ","B","W"," "," "," "],
       ["W","B","B","W","W"," "," "," "," "],
       ["W","B","W"," ","W"," "," "," "," "],
       ["W","W","B","W","W"," "," "," "," "],
       ["W","W","B","B","W"," "," "," "," "],
       ["W","W","B","W","W"," "," "," "," "],
       ["W","W","B","B","W"," "," "," "," "],
       ["W","W","B","W"," "," "," "," "," "],
       ["W","W","B","W","W"," "," "," "," "]],

      [["W","B","B"," ","B","W"," "," "," "],
       ["W","B","B","W","W"," "," "," "," "],
       ["W","B"," "," ","W"," "," "," "," "],
       ["W","W","B","W","W"," "," "," "," "],
       ["W","W","B","B","W"," "," "," "," "],
       ["W","W","B","W","W"," "," "," "," "],
       ["W","W","B","B","W"," "," "," "," "],
       ["W","W","B","W"," "," "," "," "," "],
       ["W","W","B","W","W"," "," "," "," "]],
    ]
    player.make_a_move(hist)
  
  player.end_game()
  player.receive_stones("W")

  with pytest.raises(AssertionError):
    hist = [
      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],
    ]
    player.make_a_move(hist)

def test_invalid_hist_five():
  player.end_game()
  player.receive_stones("W")

  with pytest.raises(AssertionError):
    hist = [
      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", "W", " ", " ", " ", " ", " ", " "]],

      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],
    ]
    player.make_a_move(hist)

  with pytest.raises(AssertionError):
    hist = [
      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],

      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],

      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],
    ]
    player.make_a_move(hist)

def test_invalid_hist_six():
  player.end_game()
  player.receive_stones("W")

  with pytest.raises(AssertionError):
    hist = [
      [["B", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", "W", " ", " ", " ", " ", " "]],

      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", "B", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],
    ]
    player.make_a_move(hist)

  with pytest.raises(AssertionError):
    hist = [
      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", "B", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],

      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],

      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],
    ]
    player.make_a_move(hist)

def test_invalid_hist_seven():
  player.end_game()
  player.receive_stones("W")

  with pytest.raises(AssertionError):
    hist = [
      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", "B", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],

      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", "B", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],

      [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "],
       [" ", " ", " ", " ", " ", " ", " ", " ", " "]],
    ]
    player.make_a_move(hist)