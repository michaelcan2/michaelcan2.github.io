import pytest
from board_components.board import Board
from board_components.point import Point

def test_reachable_one():
  b = Board(
    [[" ", " ", " ", " ", " ", " ", " ", " ", " "],
     [" ", " ", " ", " ", " ", " ", " ", " ", " "],
     [" ", " ", " ", " ", " ", " ", " ", " ", " "],
     [" ", " ", " ", " ", " ", " ", " ", " ", " "],
     [" ", " ", " ", " ", " ", " ", " ", " ", " "],
     [" ", " ", " ", " ", " ", " ", " ", " ", " "],
     [" ", " ", " ", " ", " ", " ", " ", " ", " "],
     [" ", " ", " ", " ", " ", " ", " ", " ", " "],
     [" ", " ", " ", " ", " ", " ", " ", " ", " "]]
  )
  assert b.reachable(Point("6-7"), "W") == False
  assert b.reachable(Point("5-1"), "B") == False
  assert b.reachable(Point("4-4"), " ") == True

def test_reachable_two():
  b = Board(
    [[" ", " "," ", " ", " ", " ", " ", " ", " "],
     [" ", "B"," ", " ", " ", " ", " ", " ", " "],
     [" ", " "," ", " ", " ", " ", " ", " ", "W"],
     [" ", " ","B", "B", "B", " ", " ", " ", " "],
     [" ", " ","B", "W", "B", " ", " ", " ", " "],
     [" ", " ","B", "W", "B", " ", " ", " ", " "],
     [" ", " ","B", "B", "B", " ", " ", " ", " "],
     [" ", " "," ", " ", " ", " ", " ", " ", " "],
     [" ", " "," ", " ", " ", " ", " ", " ", " "]]
  )
  assert b.reachable(Point("2-2"), "B") == True
  assert b.reachable(Point("2-2"), " ") == True
  assert b.reachable(Point("2-2"), "W") == False
  assert b.reachable(Point("4-5"), "B") == True
  assert b.reachable(Point("4-5"), "W") == True
  assert b.reachable(Point("4-5"), " ") == False

def test_reachable_three():
  b = Board(
    [["B", "W", "B", "B", "B", "B", "B", "W", " "],
     ["B", "W", "W", "W", "W", "W", "B", "W", " "],
     [" ", "B", "B", "B", "B", "W", "B", "W", "W"],
     [" ", " ", " ", " ", "B", "W", "B", "B", " "],
     [" ", " ", " ", " ", " ", "B", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"]]
  )
  assert b.reachable(Point("9-9"), "W") == False
  assert b.reachable(Point("9-9"), "B") == True
  assert b.reachable(Point("9-9"), " ") == True
  assert b.reachable(Point("6-3"), " ") == False

def test_reachable_four():
  b = Board(
    [["B", "W", "B", "B", "B", "B", "B", "W", " "],
     ["B", "W", "W", "W", "W", "W", "B", "W", " "],
     [" ", "B", "B", "B", "B", "W", "B", "W", "W"],
     [" ", " ", " ", " ", "B", "W", "B", "B", "W"],
     [" ", " ", " ", " ", " ", "B", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"]]
  )
  assert b.reachable(Point("9-9"), "W") == True

  b = Board(
    [["B", "W", "B", "B", "B", "B", "B", "W", " "],
     ["B", "W", "W", "W", "W", "W", "B", "W", " "],
     [" ", "B", "B", "B", "B", "W", "B", "W", "W"],
     [" ", " ", " ", " ", "B", "W", "B", "B", " "],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"]]
  )
  assert b.reachable(Point("6-3"), " ") == True

  b = Board(
    [["B", "W", "B", "B", "B", "B", "B", "W", " "],
     ["W", "W", "W", "W", "W", "W", "B", "W", " "],
     [" ", "B", "B", "B", "B", "W", "B", "W", "W"],
     [" ", " ", " ", " ", "B", "W", "B", "B", " "],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"],
     [" ", " ", " ", " ", " ", " ", " ", " ", "B"]]
  )
  assert b.reachable(Point("1-1"), " ") == False
